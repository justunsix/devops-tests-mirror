# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/jammy64"
  config.vm.hostname = "ubuntu-nhm"

  ############################################################
  # Copy some host files to configure VM like the host
  ############################################################

  # Starship config for prompt
  if File.exists?(File.expand_path("#{ENV['HOME']}/.config/starship.toml"))
    config.vm.provision "file", source: "#{ENV['HOME']}/.config/starship.toml", destination: ".config/starship.toml"
  end

  # nushell config from a dotfiles repo for shell
  # Replaced with home-manager configurations
  # if File.exists?(File.expand_path("#{ENV['HOME']}/Code/dotfiles/.config/nushell"))
  #   config.vm.provision "file", source: "#{ENV['HOME']}/Code/dotfiles/.config/nushell", destination: ".config/nushell"
  # end

  # fish config for shell
  if File.exists?(File.expand_path("#{ENV['HOME']}/.config/fish/config.fish"))
    config.vm.provision "file", source: "#{ENV['HOME']}/.config/fish/config.fish", destination: ".config/fish/config.fish"
  end

  ############################################################
  # Mount repositories from the host
  ############################################################

  # If exists, mount ~/Code from Windows Host to $HOME/Code
  if File.directory?(File.expand_path("#{ENV['HOME']}/Code"))
    config.vm.synced_folder "#{ENV['HOME']}/Code", "/home/vagrant/Code"
  end

  ############################################################
  # Install Ansible and run Ansible playbook for additional VM configuration
  ############################################################

  # Run Ansible from the Vagrant VM
  # https://developer.hashicorp.com/vagrant/docs/provisioning/ansible_local#install-galaxy-roles-in-a-path-owned-by-root
  config.vm.provision "ansible_local" do |ansible|
    ansible.become = true
    ansible.playbook = "playbook.yml"
    ansible.galaxy_role_file = "requirements.yml"
    ansible.galaxy_roles_path = "/etc/ansible/roles"
    ansible.galaxy_command = "sudo ansible-galaxy install --role-file=%{role_file} --roles-path=%{roles_path} --force"
  end

  # Install home-manager
  config.vm.provision "shell", privileged: false, path: "install_home_manager.sh"

  # Run broot --install in shell, run as user
  # Replaced with home-manager configurations
  # config.vm.provision "shell", privileged: false, inline: <<-SHELL
  #   /home/vagrant/.nix-profile/bin/broot --install
  # SHELL

end
