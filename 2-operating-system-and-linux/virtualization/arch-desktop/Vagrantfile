# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile provisioners based on https://bbs.archlinux.org/viewtopic.php?id=260017 created by gwpl
# with additions from https://github.com/balingit/vagrant-archlinux-gui
#
# Changes made:
# - Added Virtualbox clipboard and drag, drop sharing
# - Additional comments on script steps
# - Set localisation per https://wiki.archlinux.org/title/locale
# - Added sound configuration

Vagrant.configure("2") do |config|

  config.vm.box = "archlinux/archlinux"

  ############################################################
  # VirtualBox Hypervisor Configuration
  ############################################################

  # For workloads needing 2 CPU, less than 1 GB RAM, Default configuration for image
  config.vm.define "cli-micro", primary: true do |climicro|
    climicro.vm.box = "archlinux/archlinux"

    climicro.vm.provider :virtualbox do |vb|
      vb.name = "climicro"
    end
  end

  # For graphical workloads
  config.vm.define "desktopvm" do |desktopvm|
    desktopvm.vm.box = "archlinux/archlinux"

    desktopvm.vm.provider :virtualbox do |vb|
      # https://www.vagrantup.com/docs/providers/virtualbox/configuration
      vb.gui = true
      vb.name = "Archlinux_GUI"
      vb.linked_clone = true
      vb.check_guest_additions = true
      # v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
      # Video ram in MB, increase from 64 to 128 and increase memory from 2048 to 4096 for more graphical applications like browser
      vb.customize ["modifyvm", :id, "--vram", "128"]
      vb.memory = 4096
      vb.cpus = 2
      # Enable bidirectional clipboard sharing
      vb.customize ["modifyvm", :id, "--clipboard-mode", "bidirectional"]
      # Enable bidirectional drag and drop
      vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]    
      # Enable audio 
      # - dsound for Windows DirectSound, alsa for Linux, or coreaudio for macOS
      vb.customize ["modifyvm", :id, "--audio", "dsound"]
      #vb.customize ["modifyvm", :id, "--audio", "alsa"]
      vb.customize ["modifyvm", :id, "--audiocontroller", "hda"]
    end
  end

  ############################################################
  # Mount repositories from the host
  ############################################################

  # If exists, mount ~/Code from Windows Host to $HOME/Code/m
  if File.directory?(File.expand_path("#{ENV['HOME']}/Code"))
    config.vm.synced_folder "#{ENV['HOME']}/Code", "/home/vagrant/Code/m"
  end

  # If exists, mount S:/Code from Windows Host to $HOME/Code/s
  if File.directory?(File.expand_path("S:/Code"))
    config.vm.synced_folder "S:/Code", "/home/vagrant/Code/s"
  end

  ############################################################
  # Provisioners
  ############################################################

  config.vm.provision "main-setup", type: "shell", run: "never", path: "provisioner/main-setup.sh"

  config.vm.provision "xorg", type: "shell", run: "never", path: "provisioner/xorg.sh"

  config.vm.provision "kde", type: "shell", run: "never", path: "provisioner/desktop-kde.sh"

  config.vm.provision "gnome", type: "shell", run: "never", path: "provisioner/desktop-gnome.sh"

  config.vm.provision "sound", type: "shell", run: "never", path: "provisioner/sound.sh"

  config.vm.provision "nix", type: "shell", run: "never", path: "provisioner/nix.sh"

  config.vm.provision "nix-home-manager", type: "shell", run: "never", privileged: false, path: "provisioner/nix-home-manager.sh"

  config.vm.provision "astronvim", type: "shell", run: "never", privileged: false, path: "provisioner/astronvim.sh"

  config.vm.provision "aur", type: "shell", run: "never", privileged: false, path: "provisioner/AUR-helper.sh"

  config.vm.provision "emacs-doom", type: "shell", run: "never", privileged: false, path: "provisioner/emacs-doom.sh"

end  
